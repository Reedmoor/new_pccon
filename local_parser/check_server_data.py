#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Docker —Å–µ—Ä–≤–µ—Ä–µ
"""

import requests
import json
from datetime import datetime

def check_docker_server():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Docker —Å–µ—Ä–≤–µ—Ä–µ"""
    server_url = "http://127.0.0.1:5000"
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Docker —Å–µ—Ä–≤–µ—Ä–µ...")
    print(f"üì° –°–µ—Ä–≤–µ—Ä: {server_url}")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Å—Ç–∞—Ç—É—Å–∞
        response = requests.get(f"{server_url}/api/parser-status", timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            uploads = data.get('recent_uploads', [])
            
            print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
            print(f"üìä –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∑–æ–∫: {len(uploads)}")
            
            if uploads:
                print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏:")
                total_products = 0
                
                for i, upload in enumerate(uploads[:10], 1):
                    filename = upload.get('filename', 'Unknown')
                    product_count = upload.get('product_count', 0)
                    upload_time = upload.get('upload_time', '')
                    file_size = upload.get('file_size', 0)
                    
                    total_products += product_count
                    
                    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
                    try:
                        dt = datetime.fromisoformat(upload_time.replace('Z', '+00:00'))
                        time_str = dt.strftime('%Y-%m-%d %H:%M:%S')
                    except:
                        time_str = upload_time
                    
                    size_kb = file_size / 1024 if file_size > 0 else 0
                    
                    print(f"  {i:2d}. {filename}")
                    print(f"      üì¶ {product_count:,} —Ç–æ–≤–∞—Ä–æ–≤")
                    print(f"      üïí {time_str}")
                    print(f"      üíæ {size_kb:.1f} KB")
                    print()
                
                print(f"üéØ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤–æ –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∑–∫–∞—Ö: {total_products:,}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∞–º—É—é —Å–≤–µ–∂—É—é –∑–∞–≥—Ä—É–∑–∫—É
                latest = uploads[0]
                print(f"\nüî• –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–≥—Ä—É–∑–∫–∞:")
                print(f"   –§–∞–π–ª: {latest.get('filename')}")
                print(f"   –¢–æ–≤–∞—Ä–æ–≤: {latest.get('product_count')} ")
                print(f"   –í—Ä–µ–º—è: {latest.get('upload_time')}")
                
            else:
                print("‚ùå –ó–∞–≥—Ä—É–∑–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Docker —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5000")
        
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def check_web_interface():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    server_url = "http://127.0.0.1:5000"
    
    print("\n" + "=" * 50)
    print("üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
    
    try:
        response = requests.get(server_url, timeout=10)
        
        if response.status_code == 200:
            print(f"‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω: {server_url}")
            print("   –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤")
        else:
            print(f"‚ùå –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: {e}")

if __name__ == "__main__":
    check_docker_server()
    check_web_interface()
    
    print("\n" + "=" * 50)
    print("üéØ –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
    print("   http://127.0.0.1:5000")
    print("\nüìä –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ—Ä–µ–∑ API:")
    print("   http://127.0.0.1:5000/api/parser-status") 