#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ —Å –Ω—É–ª–µ–≤–æ–π —Ü–µ–Ω–æ–π
"""

import requests
import json

def check_zero_price_products():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å –Ω—É–ª–µ–≤–æ–π —Ü–µ–Ω–æ–π"""
    print("üîç –ê–ù–ê–õ–ò–ó –¢–û–í–ê–†–û–í –° –ù–£–õ–ï–í–û–ô –¶–ï–ù–û–ô")
    print("=" * 60)
    
    # –ß–∏—Ç–∞–µ–º JSON —Ñ–∞–π–ª
    json_file = "../data/local_parser_data_20250607_151208.json"
    try:
        with open(json_file, 'r', encoding='utf-8') as f:
            json_data = json.load(f)
        
        # JSON —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞–ø—Ä—è–º—É—é
        if isinstance(json_data, list):
            products = json_data
        else:
            products = json_data.get('products', [])
        
        print(f"üìä –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ JSON: {len(products):,}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ü–µ–Ω—ã –≤ JSON
        zero_price_products = []
        valid_price_products = []
        
        for product in products:
            price_discounted = product.get('price_discounted', 0)
            if price_discounted == 0 or price_discounted is None:
                zero_price_products.append(product)
            else:
                valid_price_products.append(product)
        
        print(f"‚ùå –¢–æ–≤–∞—Ä–æ–≤ —Å –Ω—É–ª–µ–≤–æ–π/–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–π —Ü–µ–Ω–æ–π –≤ JSON: {len(zero_price_products):,}")
        print(f"‚úÖ –¢–æ–≤–∞—Ä–æ–≤ —Å –≤–∞–ª–∏–¥–Ω–æ–π —Ü–µ–Ω–æ–π –≤ JSON: {len(valid_price_products):,}")
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã —Å –Ω—É–ª–µ–≤–æ–π —Ü–µ–Ω–æ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        zero_by_category = {}
        for product in zero_price_products:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ URL –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é
            category = "unknown"
            url = product.get('url', '')
            name = product.get('name') or ''
            name = name.lower()
            
            if 'korpus' in url or '–∫–æ—Ä–ø—É—Å' in name:
                category = 'case'
            elif 'videocard' in url or '–≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞' in name:
                category = 'graphics_card'
            elif 'ram' in url or '–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å' in name:
                category = 'ram'
            elif 'processor' in url or '–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä' in name:
                category = 'processor'
            elif 'cooler' in url or '–∫—É–ª–µ—Ä' in name:
                category = 'cooler'
            elif 'power' in url or '–±–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è' in name:
                category = 'power_supply'
            elif 'motherboard' in url or '–º–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞' in name:
                category = 'motherboard'
            elif 'ssd' in url or '–Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å' in name:
                category = 'hard_drive'
            
            if category not in zero_by_category:
                zero_by_category[category] = []
            zero_by_category[category].append(product)
        
        print(f"\nüìä –¢–æ–≤–∞—Ä—ã —Å –Ω—É–ª–µ–≤–æ–π —Ü–µ–Ω–æ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
        for category, items in zero_by_category.items():
            print(f"   ‚Ä¢ {category}: {len(items):,} —Ç–æ–≤–∞—Ä–æ–≤")
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
            for i, item in enumerate(items[:2]):
                name = item.get('name') or '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'
                name_short = name[:50] + "..." if len(name) > 50 else name
                price_orig = item.get('price_original', 0)
                print(f"     {i+1}. {name_short} (–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è: {price_orig}‚ÇΩ)")
            if len(items) > 2:
                print(f"     ... –∏ –µ—â–µ {len(items) - 2} —Ç–æ–≤–∞—Ä–æ–≤")
            print()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    print(f"\nüåê –ü–†–û–í–ï–†–ö–ê –¢–û–í–ê–†–û–í –ù–ê –°–ï–†–í–ï–†–ï")
    print("-" * 40)
    
    try:
        response = requests.get("http://127.0.0.1:5001/api/export-products", timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            server_products = data.get('products', [])
            
            print(f"üìä –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {len(server_products):,}")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ü–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
            server_zero_price = []
            server_valid_price = []
            
            for product in server_products:
                price = product.get('price_discounted')
                if price == 0 or price is None:
                    server_zero_price.append(product)
                else:
                    server_valid_price.append(product)
            
            print(f"‚ùå –¢–æ–≤–∞—Ä–æ–≤ —Å –Ω—É–ª–µ–≤–æ–π —Ü–µ–Ω–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {len(server_zero_price):,}")
            print(f"‚úÖ –¢–æ–≤–∞—Ä–æ–≤ —Å –≤–∞–ª–∏–¥–Ω–æ–π —Ü–µ–Ω–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {len(server_valid_price):,}")
            
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
            server_zero_by_category = {}
            for product in server_zero_price:
                category = product.get('product_type', 'unknown')
                if category not in server_zero_by_category:
                    server_zero_by_category[category] = []
                server_zero_by_category[category].append(product)
            
            print(f"\nüìä –¢–æ–≤–∞—Ä—ã —Å –Ω—É–ª–µ–≤–æ–π —Ü–µ–Ω–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
            for category, items in server_zero_by_category.items():
                print(f"   ‚Ä¢ {category}: {len(items):,} —Ç–æ–≤–∞—Ä–æ–≤")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É: {e}")

if __name__ == "__main__":
    check_zero_price_products() 